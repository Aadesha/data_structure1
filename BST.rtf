{\rtf1\ansi\ansicpg1252\cocoartf1561\cocoasubrtf600
{\fonttbl\f0\fnil\fcharset0 Menlo-Regular;\f1\fswiss\fcharset0 Helvetica;}
{\colortbl;\red255\green255\blue255;\red100\green56\blue32;\red255\green255\blue255;\red196\green26\blue22;
\red170\green13\blue145;\red0\green0\blue0;\red63\green110\blue116;\red28\green0\blue207;\red46\green13\blue110;
\red38\green71\blue75;\red0\green116\blue0;}
{\*\expandedcolortbl;;\csgenericrgb\c39100\c22000\c12500;\csgenericrgb\c100000\c100000\c100000;\csgenericrgb\c77000\c10200\c8600;
\csgenericrgb\c66500\c5200\c56900;\csgenericrgb\c0\c0\c0;\csgenericrgb\c24700\c43100\c45600;\csgenericrgb\c11000\c0\c81000;\csgenericrgb\c18100\c5200\c43100;
\csgenericrgb\c14900\c27800\c29400;\csgenericrgb\c0\c45600\c0;}
\paperw11900\paperh16840\margl1440\margr1440\vieww10800\viewh8400\viewkind0
\deftab1186
\pard\tx1186\pardeftab1186\pardirnatural\partightenfactor0

\f0\fs48 \cf2 \cb3 #include\cf4 <stdio.h>
\f1\fs24 \cf0 \

\f0\fs48 \cf2 #include\cf4 <stdlib.h>
\f1\fs24 \cf0 \

\f0\fs48 \cf5 struct\cf6  tree
\f1\fs24 \cf0 \

\f0\fs48 \cf6 \{ \cf5 int\cf6  data;
\f1\fs24 \cf0 \

\f0\fs48 \cf6     \cf5 struct\cf6  \cf7 tree\cf6 *r;
\f1\fs24 \cf0 \

\f0\fs48 \cf6     \cf5 struct\cf6  \cf7 tree\cf6 *l;
\f1\fs24 \cf0 \

\f0\fs48 \cf6     \cf5 struct\cf6  \cf7 tree\cf6 *p;
\f1\fs24 \cf0 \

\f0\fs48 \cf6 \}*root=\cf5 NULL\cf6 ,*temp=\cf5 NULL\cf6 ,*temp3;
\f1\fs24 \cf0 \

\f0\fs48 \cf5 void\cf6  search(\cf5 struct\cf6  \cf7 tree\cf6 *);
\f1\fs24 \cf0 \

\f0\fs48 \cf5 void\cf6  inorder(\cf5 struct\cf6  \cf7 tree\cf6 *);
\f1\fs24 \cf0 \

\f0\fs48 \cf5 void\cf6  insert(\cf5 void\cf6 );
\f1\fs24 \cf0 \

\f0\fs48 \cf5 void\cf6  delete(\cf5 void\cf6 );
\f1\fs24 \cf0 \

\f0\fs48 \cf5 struct\cf6  \cf7 tree\cf6  *min(\cf5 struct\cf6  \cf7 tree\cf6 *);
\f1\fs24 \cf0 \
\

\f0\fs48 \cf5 void\cf6  create(\cf5 void\cf6 );
\f1\fs24 \cf0 \

\f0\fs48 \cf5 void\cf6  search1(\cf5 struct\cf6  \cf7 tree\cf6 *,\cf5 int\cf6  );
\f1\fs24 \cf0 \

\f0\fs48 \cf5 void\cf6  hi(\cf5 struct\cf6  \cf7 tree\cf6 *);
\f1\fs24 \cf0 \

\f0\fs48 \cf5 int\cf6  main()
\f1\fs24 \cf0 \

\f0\fs48 \cf6 \{   \cf5 int\cf6  choice;
\f1\fs24 \cf0 \

\f0\fs48 \cf6     \cf5 int\cf6  cont=\cf8 1\cf6 ;
\f1\fs24 \cf0 \

\f0\fs48 \cf6      \cf5 while\cf6 (cont==\cf8 1\cf6 )
\f1\fs24 \cf0 \

\f0\fs48 \cf6      \{
\f1\fs24 \cf0 \

\f0\fs48 \cf6          \cf9 printf\cf6 (\cf4 "\\n1:inorder\\n2:insert\\n3:delete"\cf6 );
\f1\fs24 \cf0 \

\f0\fs48 \cf6          \cf9 printf\cf6 (\cf4 "enter your choice"\cf6 );
\f1\fs24 \cf0 \

\f0\fs48 \cf6          \cf9 scanf\cf6 (\cf4 "%d"\cf6 ,&choice);
\f1\fs24 \cf0 \

\f0\fs48 \cf6          \cf5 switch\cf6 (choice)
\f1\fs24 \cf0 \

\f0\fs48 \cf6          \{
\f1\fs24 \cf0 \

\f0\fs48 \cf6              \cf5 case\cf6  \cf8 1\cf6 :
\f1\fs24 \cf0 \

\f0\fs48 \cf6                  \cf10 inorder\cf6 (\cf7 root\cf6 );
\f1\fs24 \cf0 \

\f0\fs48 \cf6                  \cf5 break\cf6 ;
\f1\fs24 \cf0 \

\f0\fs48 \cf6              \cf5 case\cf6  \cf8 2\cf6 :
\f1\fs24 \cf0 \

\f0\fs48 \cf6                  \cf10 insert\cf6 ();
\f1\fs24 \cf0 \

\f0\fs48 \cf6                  \cf5 break\cf6 ;
\f1\fs24 \cf0 \

\f0\fs48 \cf6              \cf5 case\cf6  \cf8 3\cf6 :
\f1\fs24 \cf0 \

\f0\fs48 \cf6                  \cf10 delete\cf6 ();
\f1\fs24 \cf0 \

\f0\fs48 \cf6                  \cf5 break\cf6 ;
\f1\fs24 \cf0 \

\f0\fs48 \cf6          \}
\f1\fs24 \cf0 \

\f0\fs48 \cf6        \cf11 //  printf("to continue =1");
\f1\fs24 \cf0 \

\f0\fs48 \cf6          \cf11 //scanf("%d",&cont);
\f1\fs24 \cf0 \

\f0\fs48 \cf6      \}
\f1\fs24 \cf0 \

\f0\fs48 \cf6     \cf5 return\cf6  \cf8 0\cf6 ;
\f1\fs24 \cf0 \

\f0\fs48 \cf6 \}
\f1\fs24 \cf0 \
\

\f0\fs48 \cf5 void\cf6  create()
\f1\fs24 \cf0 \

\f0\fs48 \cf6 \{   \cf5 int\cf6  key;
\f1\fs24 \cf0 \

\f0\fs48 \cf6     \cf9 printf\cf6 (\cf4 "\\n enter value "\cf6 );
\f1\fs24 \cf0 \

\f0\fs48 \cf6     \cf9 scanf\cf6 (\cf4 "%d"\cf6 ,&key);
\f1\fs24 \cf0 \

\f0\fs48 \cf6     \cf7 temp\cf6 =(\cf5 struct\cf6  \cf7 tree\cf6 *)\cf9 malloc\cf6 (\cf5 sizeof\cf6 (\cf5 struct\cf6  \cf7 tree\cf6 ));
\f1\fs24 \cf0 \

\f0\fs48 \cf6     \cf7 temp\cf6 ->\cf7 data\cf6 =key;
\f1\fs24 \cf0 \

\f0\fs48 \cf6     \cf7 temp\cf6 ->\cf7 p\cf6 =\cf5 NULL\cf6 ;
\f1\fs24 \cf0 \

\f0\fs48 \cf6     \cf7 temp\cf6 ->\cf7 l\cf6 =\cf5 NULL\cf6 ;
\f1\fs24 \cf0 \

\f0\fs48 \cf6     \cf7 temp\cf6 ->\cf7 r\cf6 =\cf5 NULL\cf6 ;
\f1\fs24 \cf0 \

\f0\fs48 \cf6     
\f1\fs24 \cf0 \

\f0\fs48 \cf6 \}
\f1\fs24 \cf0 \

\f0\fs48 \cf5 void\cf6  insert()
\f1\fs24 \cf0 \

\f0\fs48 \cf6 \{
\f1\fs24 \cf0 \

\f0\fs48 \cf6     \cf10 create\cf6 ();
\f1\fs24 \cf0 \

\f0\fs48 \cf6  \cf5 if\cf6 (\cf7 root\cf6 ==\cf5 NULL\cf6 )
\f1\fs24 \cf0 \

\f0\fs48 \cf6  \{
\f1\fs24 \cf0 \

\f0\fs48 \cf6      \cf7 root\cf6 =\cf7 temp\cf6 ;
\f1\fs24 \cf0 \

\f0\fs48 \cf6      \cf5 return\cf6  ;
\f1\fs24 \cf0 \

\f0\fs48 \cf6  \}
\f1\fs24 \cf0 \

\f0\fs48 \cf6   \cf5 else
\f1\fs24 \cf0 \

\f0\fs48 \cf6   \{
\f1\fs24 \cf0 \

\f0\fs48 \cf6       \cf10 search\cf6 (\cf7 root\cf6 );
\f1\fs24 \cf0 \

\f0\fs48 \cf6   \}
\f1\fs24 \cf0 \

\f0\fs48 \cf6     
\f1\fs24 \cf0 \

\f0\fs48 \cf6 \}
\f1\fs24 \cf0 \
\

\f0\fs48 \cf5 void\cf6  search(\cf5 struct\cf6  \cf7 tree\cf6 * temp1)
\f1\fs24 \cf0 \

\f0\fs48 \cf6 \{
\f1\fs24 \cf0 \

\f0\fs48 \cf6     \cf5 if\cf6 (\cf7 temp\cf6 ->\cf7 data\cf6 >temp1->\cf7 data\cf6 )
\f1\fs24 \cf0 \

\f0\fs48 \cf6     \{   \cf5 if\cf6 (temp1->\cf7 r\cf6 ==\cf5 NULL\cf6 )
\f1\fs24 \cf0 \

\f0\fs48 \cf6     \{
\f1\fs24 \cf0 \

\f0\fs48 \cf6         temp1->\cf7 r\cf6 =\cf7 temp\cf6 ;
\f1\fs24 \cf0 \

\f0\fs48 \cf6         \cf7 temp\cf6 ->\cf7 p\cf6 =temp1;
\f1\fs24 \cf0 \

\f0\fs48 \cf6         \cf5 return\cf6  ;
\f1\fs24 \cf0 \

\f0\fs48 \cf6     \}\cf5 else\cf6 \{
\f1\fs24 \cf0 \

\f0\fs48 \cf6         \cf10 search\cf6 (temp1->\cf7 r\cf6 );
\f1\fs24 \cf0 \

\f0\fs48 \cf6     \}
\f1\fs24 \cf0 \

\f0\fs48 \cf6     \}
\f1\fs24 \cf0 \

\f0\fs48 \cf6     \cf5 if\cf6 (\cf7 temp\cf6 ->\cf7 data\cf6 <temp1->\cf7 data\cf6 )
\f1\fs24 \cf0 \

\f0\fs48 \cf6     \{   \cf5 if\cf6 (temp1->\cf7 l\cf6 ==\cf5 NULL\cf6 )
\f1\fs24 \cf0 \

\f0\fs48 \cf6     \{
\f1\fs24 \cf0 \

\f0\fs48 \cf6         temp1->\cf7 l\cf6 =\cf7 temp\cf6 ;
\f1\fs24 \cf0 \

\f0\fs48 \cf6         \cf7 temp\cf6 ->\cf7 p\cf6 =temp1;
\f1\fs24 \cf0 \

\f0\fs48 \cf6         \cf5 return\cf6  ;
\f1\fs24 \cf0 \

\f0\fs48 \cf6     \}\cf5 else\cf6 \{
\f1\fs24 \cf0 \

\f0\fs48 \cf6         \cf10 search\cf6 (temp1->\cf7 l\cf6 );
\f1\fs24 \cf0 \

\f0\fs48 \cf6     \}
\f1\fs24 \cf0 \

\f0\fs48 \cf6     \}
\f1\fs24 \cf0 \

\f0\fs48 \cf6     
\f1\fs24 \cf0 \

\f0\fs48 \cf6    
\f1\fs24 \cf0 \

\f0\fs48 \cf6 \}
\f1\fs24 \cf0 \
\

\f0\fs48 \cf5 void\cf6  delete()
\f1\fs24 \cf0 \

\f0\fs48 \cf6 \{   \cf5 int\cf6  key;
\f1\fs24 \cf0 \

\f0\fs48 \cf6     \cf9 printf\cf6 (\cf4 "\\n enter the key to be deleted"\cf6 );
\f1\fs24 \cf0 \

\f0\fs48 \cf6     \cf9 scanf\cf6 (\cf4 "%d"\cf6 ,&key);
\f1\fs24 \cf0 \

\f0\fs48 \cf6     
\f1\fs24 \cf0 \

\f0\fs48 \cf6     \cf10 search1\cf6 (\cf7 root\cf6 ,key);
\f1\fs24 \cf0 \

\f0\fs48 \cf6 \}
\f1\fs24 \cf0 \
\

\f0\fs48 \cf5 void\cf6  search1(\cf5 struct\cf6  \cf7 tree\cf6 *temp2,\cf5 int\cf6  k)
\f1\fs24 \cf0 \

\f0\fs48 \cf6 \{
\f1\fs24 \cf0 \

\f0\fs48 \cf6     \cf5 if\cf6 (k>temp2->\cf7 data\cf6 )
\f1\fs24 \cf0 \

\f0\fs48 \cf6     \{   \cf5 if\cf6 (temp2->\cf7 r\cf6 ==\cf5 NULL\cf6 )
\f1\fs24 \cf0 \

\f0\fs48 \cf6     \{
\f1\fs24 \cf0 \

\f0\fs48 \cf6         \cf9 printf\cf6 (\cf4 "\\n no such node exits"\cf6 );
\f1\fs24 \cf0 \

\f0\fs48 \cf6         \cf5 return\cf6  ;
\f1\fs24 \cf0 \

\f0\fs48 \cf6     \}\cf5 else\cf6 \{
\f1\fs24 \cf0 \

\f0\fs48 \cf6         \cf10 search1\cf6 (temp2->\cf7 r\cf6 ,k);
\f1\fs24 \cf0 \

\f0\fs48 \cf6     \}
\f1\fs24 \cf0 \

\f0\fs48 \cf6     \}
\f1\fs24 \cf0 \

\f0\fs48 \cf6     \cf5 else\cf6  \cf5 if\cf6 (k<temp2->\cf7 data\cf6 )
\f1\fs24 \cf0 \

\f0\fs48 \cf6     \{   \cf5 if\cf6 (temp2->\cf7 l\cf6 ==\cf5 NULL\cf6 )
\f1\fs24 \cf0 \

\f0\fs48 \cf6     \{
\f1\fs24 \cf0 \

\f0\fs48 \cf6         \cf9 printf\cf6 (\cf4 "\\n no such node exits"\cf6 );
\f1\fs24 \cf0 \

\f0\fs48 \cf6         \cf5 return\cf6  ;
\f1\fs24 \cf0 \

\f0\fs48 \cf6     \}\cf5 else\cf6 \{
\f1\fs24 \cf0 \

\f0\fs48 \cf6         \cf10 search1\cf6 (temp2->\cf7 l\cf6 ,k);
\f1\fs24 \cf0 \

\f0\fs48 \cf6     \}
\f1\fs24 \cf0 \

\f0\fs48 \cf6     \}
\f1\fs24 \cf0 \

\f0\fs48 \cf6     \cf5 else\cf6 \{
\f1\fs24 \cf0 \

\f0\fs48 \cf6         \cf5 if\cf6 (k==temp2->\cf7 data\cf6 )
\f1\fs24 \cf0 \

\f0\fs48 \cf6         \{
\f1\fs24 \cf0 \

\f0\fs48 \cf6             \cf10 hi\cf6 (temp2);
\f1\fs24 \cf0 \

\f0\fs48 \cf6             \cf5 return\cf6  ;
\f1\fs24 \cf0 \

\f0\fs48 \cf6             
\f1\fs24 \cf0 \

\f0\fs48 \cf6         \}
\f1\fs24 \cf0 \

\f0\fs48 \cf6         
\f1\fs24 \cf0 \

\f0\fs48 \cf6     \}
\f1\fs24 \cf0 \

\f0\fs48 \cf6 \}
\f1\fs24 \cf0 \
\

\f0\fs48 \cf5 void\cf6   hi(\cf5 struct\cf6  \cf7 tree\cf6  *t)
\f1\fs24 \cf0 \

\f0\fs48 \cf6 \{
\f1\fs24 \cf0 \

\f0\fs48 \cf6     \cf5 if\cf6 ((t->\cf7 l\cf6 ==\cf5 NULL\cf6 )&&(t->\cf7 r\cf6 ==\cf5 NULL\cf6 ))
\f1\fs24 \cf0 \

\f0\fs48 \cf6     \{
\f1\fs24 \cf0 \

\f0\fs48 \cf6         \cf5 if\cf6 (t->\cf7 p\cf6 ->\cf7 r\cf6 ==t)
\f1\fs24 \cf0 \

\f0\fs48 \cf6         \{ t->\cf7 p\cf6 ->\cf7 r\cf6 =\cf5 NULL\cf6 ;
\f1\fs24 \cf0 \

\f0\fs48 \cf6             \cf9 free\cf6 (t);
\f1\fs24 \cf0 \

\f0\fs48 \cf6             \cf5 return\cf6  ;
\f1\fs24 \cf0 \

\f0\fs48 \cf6         \}
\f1\fs24 \cf0 \

\f0\fs48 \cf6         \cf5 else
\f1\fs24 \cf0 \

\f0\fs48 \cf6         \{ t->\cf7 p\cf6 ->\cf7 l\cf6 =\cf5 NULL\cf6 ;
\f1\fs24 \cf0 \

\f0\fs48 \cf6             \cf9 free\cf6 (t);
\f1\fs24 \cf0 \

\f0\fs48 \cf6             \cf5 return\cf6  ;
\f1\fs24 \cf0 \

\f0\fs48 \cf6         \}
\f1\fs24 \cf0 \

\f0\fs48 \cf6         
\f1\fs24 \cf0 \

\f0\fs48 \cf6         
\f1\fs24 \cf0 \

\f0\fs48 \cf6     
\f1\fs24 \cf0 \

\f0\fs48 \cf6 \}
\f1\fs24 \cf0 \

\f0\fs48 \cf5 else\cf6  \cf5 if\cf6 (t->\cf7 l\cf6 ==\cf5 NULL\cf6 )
\f1\fs24 \cf0 \

\f0\fs48 \cf6 \{
\f1\fs24 \cf0 \

\f0\fs48 \cf6     \cf5 if\cf6 (t->\cf7 p\cf6 ->\cf7 r\cf6 ==t)
\f1\fs24 \cf0 \

\f0\fs48 \cf6     \{ t->\cf7 p\cf6 ->\cf7 r\cf6 =t->\cf7 r\cf6 ;
\f1\fs24 \cf0 \

\f0\fs48 \cf6         \cf9 free\cf6 (t);
\f1\fs24 \cf0 \

\f0\fs48 \cf6         \cf5 return\cf6  ;
\f1\fs24 \cf0 \

\f0\fs48 \cf6     \}
\f1\fs24 \cf0 \

\f0\fs48 \cf6     \cf5 else
\f1\fs24 \cf0 \

\f0\fs48 \cf6     \{ t->\cf7 p\cf6 ->\cf7 l\cf6 =t->\cf7 r\cf6 ;
\f1\fs24 \cf0 \

\f0\fs48 \cf6         \cf9 free\cf6 (t);
\f1\fs24 \cf0 \

\f0\fs48 \cf6         \cf5 return\cf6  ;
\f1\fs24 \cf0 \

\f0\fs48 \cf6     \}
\f1\fs24 \cf0 \

\f0\fs48 \cf6 \}
\f1\fs24 \cf0 \

\f0\fs48 \cf5 else\cf6  \cf5 if\cf6 (t->\cf7 r\cf6 ==\cf5 NULL\cf6 )
\f1\fs24 \cf0 \

\f0\fs48 \cf6 \{
\f1\fs24 \cf0 \

\f0\fs48 \cf6     \cf5 if\cf6 (t->\cf7 p\cf6 ->\cf7 r\cf6 ==t)
\f1\fs24 \cf0 \

\f0\fs48 \cf6     \{ t->\cf7 p\cf6 ->\cf7 r\cf6 =t->\cf7 l\cf6 ;
\f1\fs24 \cf0 \

\f0\fs48 \cf6         \cf9 free\cf6 (t);
\f1\fs24 \cf0 \

\f0\fs48 \cf6         \cf5 return\cf6  ;
\f1\fs24 \cf0 \

\f0\fs48 \cf6     \}
\f1\fs24 \cf0 \

\f0\fs48 \cf6     \cf5 else
\f1\fs24 \cf0 \

\f0\fs48 \cf6     \{ t->\cf7 p\cf6 ->\cf7 l\cf6 =t->\cf7 l\cf6 ;
\f1\fs24 \cf0 \

\f0\fs48 \cf6         \cf9 free\cf6 (t);
\f1\fs24 \cf0 \

\f0\fs48 \cf6         \cf5 return\cf6  ;
\f1\fs24 \cf0 \

\f0\fs48 \cf6     \}
\f1\fs24 \cf0 \

\f0\fs48 \cf6 \}
\f1\fs24 \cf0 \

\f0\fs48 \cf5 else\cf6 \{
\f1\fs24 \cf0 \

\f0\fs48 \cf6     \cf7 temp3\cf6 =\cf10 min\cf6 (t->\cf7 r\cf6 );
\f1\fs24 \cf0 \

\f0\fs48 \cf6     
\f1\fs24 \cf0 \

\f0\fs48 \cf6     \cf5 for\cf6 (;\cf7 temp3\cf6 ->\cf7 r\cf6 !=\cf5 NULL\cf6 ;)
\f1\fs24 \cf0 \

\f0\fs48 \cf6     \{
\f1\fs24 \cf0 \

\f0\fs48 \cf6         \cf5 if\cf6 (\cf7 temp3\cf6 ->\cf7 p\cf6 ->\cf7 r\cf6 ==\cf7 temp3\cf6 )
\f1\fs24 \cf0 \

\f0\fs48 \cf6     \{ \cf7 temp3\cf6 ->\cf7 p\cf6 ->\cf7 r\cf6 =\cf7 temp3\cf6 ->\cf7 r\cf6 ;
\f1\fs24 \cf0 \

\f0\fs48 \cf6         \cf7 temp3\cf6 ->\cf7 r\cf6 ->\cf7 p\cf6 =\cf7 temp3\cf6 ->\cf7 p\cf6 ;
\f1\fs24 \cf0 \

\f0\fs48 \cf6     \}
\f1\fs24 \cf0 \

\f0\fs48 \cf6     \cf5 else
\f1\fs24 \cf0 \

\f0\fs48 \cf6     \{ \cf7 temp3\cf6 ->\cf7 p\cf6 ->\cf7 l\cf6 =\cf7 temp3\cf6 ->\cf7 r\cf6 ;
\f1\fs24 \cf0 \

\f0\fs48 \cf6         \cf7 temp3\cf6 ->\cf7 r\cf6 ->\cf7 p\cf6 =\cf7 temp3\cf6 ->\cf7 p\cf6 ;
\f1\fs24 \cf0 \

\f0\fs48 \cf6     \}
\f1\fs24 \cf0 \

\f0\fs48 \cf6     \cf5 if\cf6 (t->\cf7 p\cf6 ->\cf7 r\cf6 ==t)
\f1\fs24 \cf0 \

\f0\fs48 \cf6     \{ t->\cf7 p\cf6 ->\cf7 r\cf6 =\cf7 temp3\cf6 ;
\f1\fs24 \cf0 \

\f0\fs48 \cf6         \cf7 temp3\cf6 ->\cf7 p\cf6 =t->\cf7 p\cf6 ;
\f1\fs24 \cf0 \

\f0\fs48 \cf6         \cf9 free\cf6 (t);
\f1\fs24 \cf0 \

\f0\fs48 \cf6         \cf5 return\cf6  ;
\f1\fs24 \cf0 \

\f0\fs48 \cf6     \}
\f1\fs24 \cf0 \

\f0\fs48 \cf6     \cf5 else
\f1\fs24 \cf0 \

\f0\fs48 \cf6     \{ t->\cf7 p\cf6 ->\cf7 l\cf6 =\cf7 temp3\cf6 ;
\f1\fs24 \cf0 \

\f0\fs48 \cf6         \cf7 temp3\cf6 ->\cf7 p\cf6 =t->\cf7 p\cf6 ;
\f1\fs24 \cf0 \

\f0\fs48 \cf6         \cf9 free\cf6 (t);
\f1\fs24 \cf0 \

\f0\fs48 \cf6         \cf5 return\cf6  ;
\f1\fs24 \cf0 \

\f0\fs48 \cf6     \}
\f1\fs24 \cf0 \

\f0\fs48 \cf6     \}
\f1\fs24 \cf0 \

\f0\fs48 \cf6     \cf5 if\cf6 (\cf7 temp3\cf6 ->\cf7 p\cf6 ->\cf7 r\cf6 ==\cf7 temp3\cf6 )
\f1\fs24 \cf0 \

\f0\fs48 \cf6     \{
\f1\fs24 \cf0 \

\f0\fs48 \cf6         \cf7 temp3\cf6 ->\cf7 p\cf6 ->\cf7 r\cf6 =\cf5 NULL\cf6 ;
\f1\fs24 \cf0 \

\f0\fs48 \cf6     \}
\f1\fs24 \cf0 \

\f0\fs48 \cf6     \cf5 else\cf6 \{
\f1\fs24 \cf0 \

\f0\fs48 \cf6         \cf7 temp3\cf6 ->\cf7 p\cf6 ->\cf7 l\cf6 =\cf5 NULL\cf6 ;
\f1\fs24 \cf0 \

\f0\fs48 \cf6     \}
\f1\fs24 \cf0 \

\f0\fs48 \cf6 \}
\f1\fs24 \cf0 \

\f0\fs48 \cf6 \}
\f1\fs24 \cf0 \
\

\f0\fs48 \cf5 struct\cf6  \cf7 tree\cf6 * min(\cf5 struct\cf6  \cf7 tree\cf6  *f)
\f1\fs24 \cf0 \

\f0\fs48 \cf6 \{
\f1\fs24 \cf0 \

\f0\fs48 \cf6     \cf5 if\cf6 (f->\cf7 l\cf6 !=\cf5 NULL\cf6 )
\f1\fs24 \cf0 \

\f0\fs48 \cf6     \{
\f1\fs24 \cf0 \

\f0\fs48 \cf6          \cf10 min\cf6 (f->\cf7 l\cf6 );
\f1\fs24 \cf0 \

\f0\fs48 \cf6     \}
\f1\fs24 \cf0 \

\f0\fs48 \cf6     
\f1\fs24 \cf0 \

\f0\fs48 \cf6     \cf5 return\cf6  f;
\f1\fs24 \cf0 \

\f0\fs48 \cf6     \}
\f1\fs24 \cf0 \
\

\f0\fs48 \cf5 void\cf6  inorder(\cf5 struct\cf6  \cf7 tree\cf6 *r)
\f1\fs24 \cf0 \

\f0\fs48 \cf6 \{   \cf5 if\cf6 (r->\cf7 l\cf6 !=\cf5 NULL\cf6 )
\f1\fs24 \cf0 \

\f0\fs48 \cf6    \{\cf10 inorder\cf6 (r->\cf7 l\cf6 );\}
\f1\fs24 \cf0 \

\f0\fs48 \cf6     \cf9 printf\cf6 (\cf4 "%d"\cf6 ,r->\cf7 data\cf6 );
\f1\fs24 \cf0 \

\f0\fs48 \cf6     \cf5 if\cf6 (r->\cf7 r\cf6 !=\cf5 NULL\cf6 )
\f1\fs24 \cf0 \

\f0\fs48 \cf6     \{\cf10 inorder\cf6 (r->\cf7 r\cf6 );\}
\f1\fs24 \cf0 \

\f0\fs48 \cf6     \cf5 return\cf6  ;
\f1\fs24 \cf0 \

\f0\fs48 \cf6     
\f1\fs24 \cf0 \

\f0\fs48 \cf6 \}
\f1\fs24 \cf0 \
\
}